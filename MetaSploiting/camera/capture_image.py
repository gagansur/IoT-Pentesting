#!/usr/bin/env python 
# author: Gagandeep k Sur
# @copyright @2022
# gks007@shsu.edu

from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer
import os
from picamera import PiCamera
from time import sleep


# Create custom HTTPRequestHandler class
class CameraClientHandler(BaseHTTPRequestHandler):
    def __init__(self):
        self._max_continuous = 100

    # handle GET command
    def do_GET(self):
        rootdir = 'c:/xampp/htdocs/'  # file location
        try:
            if self.path.endswith('.html'):
                f = open(rootdir + self.path)  # open requested file

                # send code 200 response
                self.send_response(200)

                # send header first
                self.send_header('Content-type', 'text-html')
                self.end_headers()

                # send file content to client
                self.wfile.write(f.read())
                f.close()
                return
        except IOError:
            self.send_error(404, 'file not found')

    def doPost(self):
        try:
            pass
        except Exception as ex:
            self.send_error(404, str(ex))

    def _capture_recording(self, stop_max):
        with PiCamera() as camera:
            for filename in camera.record_sequence(
                    'clip%02d.h264' % i for i in range(3)):
                print('Recording to %s' % filename)
                camera.wait_recording(10)

    def _capture_multiple(self, stop_max):
        with PiCamera as camera:
            camera.resolution = (2592, 1944)
            camera.framerate = 15
            camera.start_preview()
            try:
                sleep(2)
                camera.capture_sequence(['image%02d.jpg' % i for i in range(stop_max)])
            finally:
                camera.stop_preview()


def run():
    print('http server is starting...')
    print('http server is starting...')

    # ip and port of servr
    # by default http server port is 80
    server_address = ('192.168.1.124', 1981)
    httpd = HTTPServer(server_address, CameraClientHandler)
    print('http server is running...')
    httpd.serve_forever()


if __name__ == '__main__':
    run()
